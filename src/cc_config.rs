use coproc;

use std::collections::HashMap;

#[derive(Clone, Debug, Default)]
pub struct CCConfig {
    pub abort_jobs_on_exit: bool,
    pub allow_multiple_clients: bool,
    pub allow_remote_gui_rpc: bool,
    pub alt_platforms: Vec<String>,
    pub client_download_url: String,
    pub client_new_version_text: String,
    pub client_version_check_url: String,
    pub config_coprocs: coproc::Coprocs,
    pub disallow_attach: bool,
    pub dont_check_file_sizes: bool,
    pub dont_contact_ref_site: bool,
    pub dont_suspend_nci: bool,
    pub dont_use_vbox: bool,
    //    pub exclude_gpus: Vec<EXCLUDE_GPU>,
    pub exclusive_apps: Vec<String>,
    pub exclusive_gpu_apps: Vec<String>,
    pub exit_after_finish: bool,
    pub exit_before_start: bool,
    pub exit_when_idle: bool,
    pub fetch_minimal_work: bool,
    pub fetch_on_update: bool,
    pub force_auth: String,
    pub http_1_0: bool,
    pub http_transfer_timeout_bps: i64,
    pub http_transfer_timeout: i64,
    pub ignore_gpu_instance: HashMap<coproc::ProcType, Vec<i64>>,
    pub lower_client_priority: bool,
    pub max_event_log_lines: i64,
    pub max_file_xfers: i64,
    pub max_file_xfers_per_project: i64,
    pub max_stderr_file_size: i64,
    pub max_stdout_file_size: i64,
    pub max_tasks_reported: i64,
    pub ncpus: i64,
    pub network_test_url: String,
    pub no_alt_platform: bool,
    pub no_gpus: bool,
    pub no_info_fetch: bool,
    pub no_opencl: bool,
    pub no_priority_change: bool,
    pub os_random_only: bool,
    pub process_priority: i64,
    pub process_priority_special: i64,
    pub rec_half_life: f64,
    pub report_results_immediately: bool,
    pub run_apps_manually: bool,
    pub save_stats_days: i64,
    pub skip_cpu_benchmarks: bool,
    pub simple_gui_only: bool,
    pub start_delay: f64,
    pub stderr_head: bool,
    pub suppress_net_info: bool,
    pub unsigned_apps_ok: bool,
    pub use_all_gpus: bool,
    pub use_certs: bool,
    pub use_certs_only: bool,
}
